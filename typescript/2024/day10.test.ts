import * as assert from "node:assert";
import { describe, it } from "node:test";
import { Day10 } from "../2024";

describe("Day 10", () => {
  const day = new Day10();

  describe("when executing part 1", () => {
    [
      {
        input: ["0123", "1234", "8765", "9876"],
        expected: 1,
      },
      {
        input: [
          "...0...",
          "...1...",
          "...2...",
          "6543456",
          "7.....7",
          "8.....8",
          "9.....9",
        ],
        expected: 2,
      },
      {
        input: [
          "..90..9",
          "...1.98",
          "...2..7",
          "6543456",
          "765.987",
          "876....",
          "987....",
        ],
        expected: 4,
      },
      {
        input: [
          "10..9..",
          "2...8..",
          "3...7..",
          "4567654",
          "...8..3",
          "...9..2",
          ".....01",
        ],
        expected: 3,
      },
      {
        input: [
          "8901.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 5,
      },
      {
        input: [
          "89.10123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 6,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "87430965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 5,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "45678903",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 3,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32019.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 1,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19012",
          ".13298.1",
          "1.456732",
        ],
        expected: 3,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          "013298.1",
          "1.456732",
        ],
        expected: 5,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".1329801",
          "1.456732",
        ],
        expected: 3,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "10456732",
        ],
        expected: 5,
      },
      {
        input: [
          "89010123",
          "78121874",
          "87430965",
          "96549874",
          "45678903",
          "32019012",
          "01329801",
          "10456732",
        ],
        expected: 36,
      },
    ].forEach(({ input, expected }) => {
      it(`should correctly expect ${expected}`, () => {
        assert.deepStrictEqual(day.executePartOne(input), expected);
      });
    });
  });

  describe("when executing part 2", () => {
    [
      {
        input: [
          ".....0.",
          "..4321.",
          "..5..2.",
          "..6543.",
          "..7..4.",
          "..8765.",
          "..9....",
        ],
        expected: 3,
      },
      {
        input: [
          "..90..9",
          "...1.98",
          "...2..7",
          "6543456",
          "765.987",
          "876....",
          "987....",
        ],
        expected: 13,
      },
      {
        input: ["012345", "123456", "234567", "345678", "4.6789", "56789."],
        expected: 227,
      },
      {
        input: [
          "8901.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 20,
      },
      {
        input: [
          "89.10123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 24,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "87430965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 10,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "45678903",
          "32.19.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 4,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32019.12",
          ".13298.1",
          "1.456732",
        ],
        expected: 1,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19012",
          ".13298.1",
          "1.456732",
        ],
        expected: 4,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          "013298.1",
          "1.456732",
        ],
        expected: 5,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".1329801",
          "1.456732",
        ],
        expected: 8,
      },
      {
        input: [
          "89.1.123",
          "78121874",
          "8743.965",
          "96549874",
          "456789.3",
          "32.19.12",
          ".13298.1",
          "10456732",
        ],
        expected: 5,
      },
      {
        input: [
          "89010123",
          "78121874",
          "87430965",
          "96549874",
          "45678903",
          "32019012",
          "01329801",
          "10456732",
        ],
        expected: 81,
      },
    ].forEach(({ input, expected }) => {
      it(`should correctly expect ${expected}`, () => {
        assert.deepStrictEqual(day.executePartTwo(input), expected);
      });
    });
  });
});
